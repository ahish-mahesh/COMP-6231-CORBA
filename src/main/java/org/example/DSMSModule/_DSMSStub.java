package org.example.DSMSModule;


/**
* DSMSModule/_DSMSStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from org/example/DSMS_CORBA.idl
* Monday, February 24, 2025 4:01:57 PM EST
*/

public class _DSMSStub extends org.omg.CORBA.portable.ObjectImpl implements DSMS
{


  // Admin roles
  public String addShare (String shareID, String shareType, int capacity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addShare", true);
                $out.write_string (shareID);
                $out.write_string (shareType);
                $out.write_long (capacity);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addShare (shareID, shareType, capacity        );
            } finally {
                _releaseReply ($in);
            }
  } // addShare

  public String removeShare (String shareID, String shareType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeShare", true);
                $out.write_string (shareID);
                $out.write_string (shareType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeShare (shareID, shareType        );
            } finally {
                _releaseReply ($in);
            }
  } // removeShare

  public String listShareAvailability (String shareType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listShareAvailability", true);
                $out.write_string (shareType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listShareAvailability (shareType        );
            } finally {
                _releaseReply ($in);
            }
  } // listShareAvailability


  // Buyer roles
  public String purchaseShare (String buyerID, String shareID, String shareType, int shareCount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("purchaseShare", true);
                $out.write_string (buyerID);
                $out.write_string (shareID);
                $out.write_string (shareType);
                $out.write_long (shareCount);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return purchaseShare (buyerID, shareID, shareType, shareCount        );
            } finally {
                _releaseReply ($in);
            }
  } // purchaseShare

  public String getShares (String buyerID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShares", true);
                $out.write_string (buyerID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getShares (buyerID        );
            } finally {
                _releaseReply ($in);
            }
  } // getShares

  public String sellShare (String buyerID, String shareID, int shareCount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sellShare", true);
                $out.write_string (buyerID);
                $out.write_string (shareID);
                $out.write_long (shareCount);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sellShare (buyerID, shareID, shareCount        );
            } finally {
                _releaseReply ($in);
            }
  } // sellShare

  public String swapShares (String buyerID, String oldShareID, String oldShareType, String newShareID, String newShareType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapShares", true);
                $out.write_string (buyerID);
                $out.write_string (oldShareID);
                $out.write_string (oldShareType);
                $out.write_string (newShareID);
                $out.write_string (newShareType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapShares (buyerID, oldShareID, oldShareType, newShareID, newShareType        );
            } finally {
                _releaseReply ($in);
            }
  } // swapShares

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DSMSModule/DSMS:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "DSMSModule._DSMSStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _DSMSStub
